{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\src\\\\files-cards\\\\files_card.js\";\nimport React, { Component } from 'react';\nimport './files_card.css'; // Services\n\nimport HttpService from '../services/http-service';\nimport DataService from '../services/data-service';\nimport notificationService, { NOTIF_FILEORFOLDER_CHANGED, NOTIF_FILESLIST_CHANGED, NOTIF_CURRENTFOLDER_CHANGED } from '../services/notification-service';\nimport { Route } from \"react-router-dom\"; // Components\n\nimport FileContent from '../fileContent/fileContent';\nimport FileListItem from '../fileListItem/fileListItem';\nvar ds = new DataService();\nvar ns = new notificationService();\nvar http = new HttpService();\n\nvar Files_card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Files_card, _Component);\n\n  function Files_card(props) {\n    var _this;\n\n    _classCallCheck(this, Files_card);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Files_card).call(this, props));\n\n    _this.fromPageChanger = function () {\n      if (ds.getFromPage() === 1) {\n        _this.setState({\n          repoUrl: \"/repositories/Repo\"\n        });\n\n        ds.setFromPage(2);\n        ds.changedFileOrFolder(true);\n      } else if (ds.getFromPage() === 3) {\n        _this.setState({\n          repoUrl: \"/repositories/Repo\"\n        });\n\n        ds.setFromPage(2);\n        ds.changedFileOrFolder(true);\n      }\n    };\n\n    _this.getSessionData = function () {\n      var cachedList = sessionStorage.getItem('filesList');\n      var cachedCurrentFolder = sessionStorage.getItem('currnetFile');\n\n      if (cachedList) {\n        ds.putNewFilesList(JSON.parse(cachedList));\n      }\n\n      if (cachedCurrentFolder) {\n        ds.changedCurrnetFile(JSON.parse(cachedCurrentFolder));\n      }\n    };\n\n    _this.loadFileOrFolder = function (FILEORFOLDER) {\n      sessionStorage.removeItem('fileOrFolder');\n      sessionStorage.setItem('fileOrFolder', JSON.stringify(FILEORFOLDER));\n\n      _this.setState({\n        fileOrFolder: FILEORFOLDER\n      });\n\n      _this.fromPageChanger();\n    };\n\n    _this.loadCurrnetFileState = function (currnetFile) {\n      sessionStorage.removeItem('currnetFile');\n      sessionStorage.setItem('currnetFile', JSON.stringify(currnetFile));\n\n      _this.setState({\n        folderName: currnetFile\n      });\n    };\n\n    _this.loadFileList = function (FileList) {\n      sessionStorage.removeItem('filesList');\n      sessionStorage.setItem('filesList', JSON.stringify(FileList));\n\n      _this.setState({\n        fileList: FileList\n      });\n    };\n\n    _this.getProjectsList = function () {\n      http.getProjects(_this.state.folderName).then(function (data) {\n        ds.putNewFilesList(data);\n\n        _this.setState({\n          fileList: ds.filesList\n        });\n      });\n    };\n\n    _this.displayFileContent = function () {\n      var CONTENT = React.createElement(\"li\", {\n        className: \"list-group-item cardFileContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/repositories/Repo/fileContent\",\n        component: FileContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n      return CONTENT;\n    };\n\n    _this.copyToClipboard = function (str) {\n      console.log(str.fileContents);\n      var el = document.createElement('textarea');\n      el.value = str.fileContents;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n    };\n\n    _this.getFilesList = function () {\n      if (_this.state.fileList) {\n        var list = _this.state.fileList.map(function (file) {\n          return React.createElement(\"div\", {\n            key: file.fileName.toString(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, React.createElement(FileListItem, {\n            file: file,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }));\n        });\n\n        return list;\n      }\n    };\n\n    _this.fileContentTitle = function () {\n      if (window.location.hash === '#/repositories/Repo') {\n        return React.createElement(\"li\", {\n          className: \"list-group-item fileLinkHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"orisayda\"));\n      } else {\n        return;\n      }\n    };\n\n    _this.mainDisplay = function () {\n      if (window.location.hash === '#/repositories/Repo') {\n        return _this.getFilesList();\n      } else {\n        return _this.displayFileContent();\n      }\n    };\n\n    var FOF;\n    var cachedFOF = sessionStorage.getItem('fileOrFolder');\n\n    if (cachedFOF) {\n      FOF = JSON.parse(cachedFOF);\n    } else {\n      FOF = true;\n      console.log('havent session storage fileOrFolder');\n    }\n\n    _this.state = {\n      folderName: JSON.parse(sessionStorage.getItem('currnetFile')),\n      fileList: JSON.parse(sessionStorage.getItem('filesList')),\n      fileOrFolder: FOF,\n      isLoading: false,\n      repoUrl: \"/repositories/Repo\"\n    };\n    console.log(_this.state.folderName);\n    _this.displayFileContent = _this.displayFileContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getProjectsList = _this.getProjectsList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getFilesList = _this.getFilesList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.mainDisplay = _this.mainDisplay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadFileList = _this.loadFileList.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.loadFileContent = this.loadFileContent.bind(this);\n\n    _this.loadCurrnetFileState = _this.loadCurrnetFileState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadFileOrFolder = _this.loadFileOrFolder.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSessionData = _this.getSessionData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fromPageChanger = _this.fromPageChanger.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.copyToClipboard = _this.copyToClipboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fileContentTitle = _this.fileContentTitle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.fromPageChanger();\n\n    _this.getSessionData();\n\n    return _this;\n  }\n\n  _createClass(Files_card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ns.addObserver(NOTIF_FILEORFOLDER_CHANGED, this, this.loadFileOrFolder);\n      ns.addObserver(NOTIF_FILESLIST_CHANGED, this, this.loadFileList);\n      ns.addObserver(NOTIF_CURRENTFOLDER_CHANGED, this, this.loadCurrnetFileState);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ns.removeObserver(this, NOTIF_FILESLIST_CHANGED);\n      ns.removeObserver(this, NOTIF_CURRENTFOLDER_CHANGED);\n      ns.removeObserver(this, NOTIF_FILEORFOLDER_CHANGED);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"card-header cardMain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sameRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"pathName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"orisayda \"), React.createElement(\"h3\", {\n        className: \"pathName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"/ \"), React.createElement(\"h2\", {\n        className: \"pathName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, ds.getCurrentFile().toString())), React.createElement(\"div\", {\n        className: \"card-header cardHeadManeger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body filesBodyCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"filesList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.fileContentTitle(), this.mainDisplay())));\n    }\n  }]);\n\n  return Files_card;\n}(Component);\n\nexport default Files_card;","map":{"version":3,"sources":["C:\\Users\\ori saida\\Desktop\\OriHub\\client\\src\\files-cards\\files_card.js"],"names":["React","Component","HttpService","DataService","notificationService","NOTIF_FILEORFOLDER_CHANGED","NOTIF_FILESLIST_CHANGED","NOTIF_CURRENTFOLDER_CHANGED","Route","FileContent","FileListItem","ds","ns","http","Files_card","props","fromPageChanger","getFromPage","setState","repoUrl","setFromPage","changedFileOrFolder","getSessionData","cachedList","sessionStorage","getItem","cachedCurrentFolder","putNewFilesList","JSON","parse","changedCurrnetFile","loadFileOrFolder","FILEORFOLDER","removeItem","setItem","stringify","fileOrFolder","loadCurrnetFileState","currnetFile","folderName","loadFileList","FileList","fileList","getProjectsList","getProjects","state","then","data","filesList","displayFileContent","CONTENT","copyToClipboard","str","console","log","fileContents","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","getFilesList","list","map","file","fileName","toString","fileContentTitle","window","location","hash","mainDisplay","FOF","cachedFOF","isLoading","bind","addObserver","removeObserver","getCurrentFile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './files_card.css';\r\n\r\n// Services\r\nimport HttpService from '../services/http-service';\r\n\r\nimport DataService from '../services/data-service';\r\nimport notificationService, {NOTIF_FILEORFOLDER_CHANGED,NOTIF_FILESLIST_CHANGED,NOTIF_CURRENTFOLDER_CHANGED} from '../services/notification-service';\r\nimport {\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n// Components\r\nimport FileContent from '../fileContent/fileContent';\r\nimport FileListItem from '../fileListItem/fileListItem';\r\n\r\nlet ds = new DataService();\r\nlet ns = new notificationService();\r\n\r\n\r\nconst http = new HttpService();\r\n\r\n\r\nclass Files_card extends Component {\r\n  \r\n    constructor(props) {\r\n\t\tsuper(props);\r\n            \r\n            var FOF;\r\n        const cachedFOF = sessionStorage.getItem('fileOrFolder');\r\n        if(cachedFOF) {\r\n            FOF = JSON.parse(cachedFOF);\r\n        } else {\r\n            FOF = true;\r\n            console.log('havent session storage fileOrFolder');\r\n        }\r\n        this.state = {\r\n                    folderName: JSON.parse(sessionStorage.getItem('currnetFile')),\r\n                    fileList:JSON.parse(sessionStorage.getItem('filesList')),\r\n                    fileOrFolder: FOF,\r\n                    isLoading: false,\r\n                    repoUrl: \"/repositories/Repo\",\r\n                         };\r\n        \r\n        \r\n            console.log(this.state.folderName);\r\n            this.displayFileContent = this.displayFileContent.bind(this);\r\n            this.getProjectsList = this.getProjectsList.bind(this);\r\n            this.getFilesList = this.getFilesList.bind(this);\r\n            this.mainDisplay = this.mainDisplay.bind(this);\r\n            \r\n            this.loadFileList = this.loadFileList.bind(this);\r\n            //this.loadFileContent = this.loadFileContent.bind(this);\r\n            this.loadCurrnetFileState = this.loadCurrnetFileState.bind(this);\r\n            this.loadFileOrFolder = this.loadFileOrFolder.bind(this);\r\n            this.getSessionData = this.getSessionData.bind(this);\r\n            this.fromPageChanger = this.fromPageChanger.bind(this);\r\n            this.copyToClipboard =this.copyToClipboard.bind(this);\r\n            this.fileContentTitle = this.fileContentTitle.bind(this);\r\n            this.fromPageChanger();\r\n            this.getSessionData();\r\n    }\r\n     componentDidMount() {\r\n         ns.addObserver(NOTIF_FILEORFOLDER_CHANGED,this,this.loadFileOrFolder);\r\n         ns.addObserver(NOTIF_FILESLIST_CHANGED,this,this.loadFileList);\r\n         ns.addObserver(NOTIF_CURRENTFOLDER_CHANGED,this,this.loadCurrnetFileState);\r\n         \r\n     }\r\n    \r\n    componentWillUnmount() {\r\n        ns.removeObserver(this, NOTIF_FILESLIST_CHANGED);\r\n        ns.removeObserver(this, NOTIF_CURRENTFOLDER_CHANGED);\r\n        ns.removeObserver(this,NOTIF_FILEORFOLDER_CHANGED);\r\n      }\r\n    \r\n    fromPageChanger = () => {\r\n          if(ds.getFromPage() === 1) {\r\n              this.setState({repoUrl: \"/repositories/Repo\"});\r\n              ds.setFromPage(2);\r\n              ds.changedFileOrFolder(true);\r\n          } else if(ds.getFromPage() === 3) {\r\n              this.setState({repoUrl: \"/repositories/Repo\"});\r\n              ds.setFromPage(2);\r\n              ds.changedFileOrFolder(true);\r\n          }\r\n      }\r\n    \r\n    getSessionData = () => {\r\n        \r\n        const cachedList = sessionStorage.getItem('filesList');\r\n        const cachedCurrentFolder = sessionStorage.getItem('currnetFile');\r\n        if(cachedList) {\r\n            ds.putNewFilesList(JSON.parse(cachedList));\r\n        } \r\n        if(cachedCurrentFolder) {\r\n            ds.changedCurrnetFile(JSON.parse(cachedCurrentFolder));\r\n        } \r\n    }\r\n    \r\n    loadFileOrFolder = (FILEORFOLDER) => {\r\n        sessionStorage.removeItem('fileOrFolder');\r\n        sessionStorage.setItem('fileOrFolder',JSON.stringify(FILEORFOLDER));\r\n        this.setState({fileOrFolder: FILEORFOLDER});\r\n        this.fromPageChanger();\r\n    }\r\n    \r\n    loadCurrnetFileState = (currnetFile) => {\r\n        sessionStorage.removeItem('currnetFile');\r\n        sessionStorage.setItem('currnetFile',JSON.stringify(currnetFile));\r\n        this.setState({folderName:currnetFile});\r\n    }\r\n\r\n    \r\n    loadFileList = (FileList) => {\r\n        sessionStorage.removeItem('filesList');\r\n        sessionStorage.setItem('filesList',JSON.stringify(FileList));\r\n        this.setState({fileList:FileList});\r\n    }\r\n    \r\n    getProjectsList = () => {\r\n        http.getProjects(this.state.folderName).then(data => {\r\n            ds.putNewFilesList(data);\r\n            this.setState({fileList:ds.filesList});\r\n        });\r\n    }\r\n    \r\n    \r\n    displayFileContent = () => {\r\n          const CONTENT = (  \r\n            <li className=\"list-group-item cardFileContent\">\r\n                <Route path=\"/repositories/Repo/fileContent\" component={FileContent}/>\r\n            </li> \r\n\t    );\r\n\t    return (CONTENT);\r\n    }\r\n    \r\n     copyToClipboard = str => {\r\n         console.log(str.fileContents);\r\n      const el = document.createElement('textarea');\r\n      el.value = str.fileContents;\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(el);\r\n    };\r\n   \r\n    \r\n    getFilesList = () => {\r\n        if(this.state.fileList) {\r\n            const list = this.state.fileList.map((file) =>\r\n            <div key={file.fileName.toString()}>\r\n                  <FileListItem file={file} />                               \r\n            </div>\r\n\t    );\r\n\t    return (list);\r\n        }\r\n        \r\n    }\r\n    \r\n    fileContentTitle = () => {\r\n        if(window.location.hash==='#/repositories/Repo') {\r\n            return (<li className=\"list-group-item fileLinkHeader\">\r\n                      <a>orisayda</a>\r\n                </li>);\r\n        } else {\r\n            return ;\r\n        }\r\n    }\r\n    \r\n    mainDisplay = () => {\r\n        if(window.location.hash==='#/repositories/Repo') {\r\n            return this.getFilesList();\r\n        } else {\r\n            return this.displayFileContent();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n    return (\r\n      <div className=\"card-header cardMain\">\r\n            <div className=\"sameRow\">\r\n                <h2 className=\"pathName\">orisayda </h2> \r\n                <h3 className=\"pathName\">/ </h3>\r\n                <h2 className=\"pathName\">{ds.getCurrentFile().toString()}</h2>\r\n            </div>\r\n            <div className=\"card-header cardHeadManeger\">\r\n                \r\n          </div>\r\n          <div className=\"card-body filesBodyCard\">\r\n              <ul className=\"filesList\"> \r\n                {this.fileContentTitle()}\r\n                {this.mainDisplay()}\r\n              </ul>\r\n          </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Files_card;"]},"metadata":{},"sourceType":"module"}