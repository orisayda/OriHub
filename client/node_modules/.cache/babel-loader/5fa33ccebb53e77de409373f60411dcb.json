{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n// Services\nimport notificationService, { NOTIF_WISHLIST_CHANGED, NOTIF_FILESLIST_CHANGED, NOTIF_FILEORFOLDER_CHANGED, NOTIF_FILECONTENT_CHANGED, NOTIF_MAINFOLDER_CHANGED, NOTIF_CURRENTFOLDER_CHANGED } from './notification-service'; //import HttpService from '../services/http-service';\n//\n//const http = new HttpService();\n\nvar ns = new notificationService();\nvar instance = null;\nvar wishList = [];\nvar filesList = [];\nvar fileContent = {\n  fileName: \"\",\n  fileContents: \"\",\n  fileExe: \"\"\n};\nvar mainFolder = true;\nvar fileOrFolder = true;\nvar currnetFile = \"projects\";\nvar fromPage = 0;\n\nvar DataService = function DataService() {\n  _classCallCheck(this, DataService);\n\n  this.getFileContent = function () {\n    return fileContent;\n  };\n\n  this.setFromPage = function (newFromPage) {\n    fromPage = newFromPage;\n  };\n\n  this.getFromPage = function () {\n    return fromPage;\n  };\n\n  this.getCurrentFile = function () {\n    return currnetFile;\n  };\n\n  this.getFileOrFolder = function () {\n    return fileOrFolder;\n  };\n\n  this.changedCurrnetFile = function (newFolder) {\n    currnetFile = newFolder;\n    ns.postNotification(NOTIF_CURRENTFOLDER_CHANGED, currnetFile);\n  };\n\n  this.getMainFolder = function () {\n    return mainFolder;\n  };\n\n  this.changedFileOrFolder = function (val) {\n    fileOrFolder = val;\n    ns.postNotification(NOTIF_FILEORFOLDER_CHANGED, fileOrFolder);\n  };\n\n  this.putNewFileContent = function (file) {\n    fileContent.fileName = file.title;\n    fileContent.fileContents = file.content;\n    fileContent.fileExe = file.ext;\n    ns.postNotification(NOTIF_FILECONTENT_CHANGED, fileContent);\n  };\n\n  this.changedTAFMainFolder = function () {\n    mainFolder = !mainFolder;\n    ns.postNotification(NOTIF_MAINFOLDER_CHANGED, mainFolder);\n  };\n\n  this.putNewFilesList = function (newFilesList) {\n    filesList = newFilesList;\n    ns.postNotification(NOTIF_FILESLIST_CHANGED, filesList);\n  };\n\n  this.putNewWishList = function (newWishList) {\n    wishList = newWishList;\n    ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\n  };\n\n  this.itemOnWishList = function (item) {\n    for (var x = 0; x < wishList.length; x++) {\n      if (wishList[x]._id === item._id) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  this.addWishListItem = function (item) {\n    wishList.push(item);\n    ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\n  };\n\n  this.removeWishListItem = function (item) {\n    for (var x = 0; x < wishList.length; x++) {\n      if (wishList[x]._id === item._id) {\n        wishList.splice(x, 1);\n        ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\n        break;\n      }\n    }\n  };\n\n  if (!instance) {\n    instance = this;\n  }\n\n  return instance;\n};\n\nexport default DataService;","map":{"version":3,"sources":["C:\\Users\\ori saida\\Desktop\\OriHub\\client\\src\\services\\data-service.js"],"names":["notificationService","NOTIF_WISHLIST_CHANGED","NOTIF_FILESLIST_CHANGED","NOTIF_FILEORFOLDER_CHANGED","NOTIF_FILECONTENT_CHANGED","NOTIF_MAINFOLDER_CHANGED","NOTIF_CURRENTFOLDER_CHANGED","ns","instance","wishList","filesList","fileContent","fileName","fileContents","fileExe","mainFolder","fileOrFolder","currnetFile","fromPage","DataService","getFileContent","setFromPage","newFromPage","getFromPage","getCurrentFile","getFileOrFolder","changedCurrnetFile","newFolder","postNotification","getMainFolder","changedFileOrFolder","val","putNewFileContent","file","title","content","ext","changedTAFMainFolder","putNewFilesList","newFilesList","putNewWishList","newWishList","itemOnWishList","item","x","length","_id","addWishListItem","push","removeWishListItem","splice"],"mappings":";AACA;AACA,OAAOA,mBAAP,IAA6BC,sBAA7B,EAAoDC,uBAApD,EAA4EC,0BAA5E,EAAuGC,yBAAvG,EAAiIC,wBAAjI,EAA0JC,2BAA1J,QAA4L,wBAA5L,C,CAEA;AACA;AACA;;AAGA,IAAIC,EAAE,GAAG,IAAIP,mBAAJ,EAAT;AAEA,IAAIQ,QAAQ,GAAG,IAAf;AAEA,IAAIC,QAAQ,GAAG,EAAf;AAEA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,WAAW,GAAG;AACdC,EAAAA,QAAQ,EAAE,EADI;AAEdC,EAAAA,YAAY,EAAE,EAFA;AAGdC,EAAAA,OAAO,EAAE;AAHK,CAAlB;AAKA,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAIC,YAAY,GAAG,IAAnB;AACA,IAAIC,WAAW,GAAG,UAAlB;AAEA,IAAIC,QAAQ,GAAG,CAAf;;IAEMC,W,GACF,uBAAc;AAAA;;AAAA,OAQdC,cARc,GAQG,YAAM;AACnB,WAAOT,WAAP;AACH,GAVa;;AAAA,OAYdU,WAZc,GAYA,UAACC,WAAD,EAAiB;AAC3BJ,IAAAA,QAAQ,GAAGI,WAAX;AACH,GAda;;AAAA,OAgBdC,WAhBc,GAgBA,YAAM;AAChB,WAAOL,QAAP;AACH,GAlBa;;AAAA,OAoBdM,cApBc,GAoBG,YAAM;AACnB,WAAOP,WAAP;AACH,GAtBa;;AAAA,OAwBdQ,eAxBc,GAwBI,YAAM;AACpB,WAAOT,YAAP;AACH,GA1Ba;;AAAA,OA4BdU,kBA5Bc,GA4BO,UAACC,SAAD,EAAe;AAChCV,IAAAA,WAAW,GAAGU,SAAd;AACApB,IAAAA,EAAE,CAACqB,gBAAH,CAAoBtB,2BAApB,EAAiDW,WAAjD;AACH,GA/Ba;;AAAA,OAiCdY,aAjCc,GAiCE,YAAM;AAClB,WAAOd,UAAP;AACH,GAnCa;;AAAA,OAqCde,mBArCc,GAqCQ,UAACC,GAAD,EAAS;AAC3Bf,IAAAA,YAAY,GAAGe,GAAf;AACAxB,IAAAA,EAAE,CAACqB,gBAAH,CAAoBzB,0BAApB,EAAgDa,YAAhD;AACH,GAxCa;;AAAA,OA0CdgB,iBA1Cc,GA0CM,UAACC,IAAD,EAAU;AAC1BtB,IAAAA,WAAW,CAACC,QAAZ,GAAuBqB,IAAI,CAACC,KAA5B;AACAvB,IAAAA,WAAW,CAACE,YAAZ,GAA2BoB,IAAI,CAACE,OAAhC;AACAxB,IAAAA,WAAW,CAACG,OAAZ,GAAsBmB,IAAI,CAACG,GAA3B;AACA7B,IAAAA,EAAE,CAACqB,gBAAH,CAAoBxB,yBAApB,EAA+CO,WAA/C;AACH,GA/Ca;;AAAA,OAiDd0B,oBAjDc,GAiDS,YAAM;AACzBtB,IAAAA,UAAU,GAAG,CAACA,UAAd;AACAR,IAAAA,EAAE,CAACqB,gBAAH,CAAoBvB,wBAApB,EAA8CU,UAA9C;AACH,GApDa;;AAAA,OAsDduB,eAtDc,GAsDI,UAACC,YAAD,EAAkB;AAChC7B,IAAAA,SAAS,GAAG6B,YAAZ;AACAhC,IAAAA,EAAE,CAACqB,gBAAH,CAAoB1B,uBAApB,EAA6CQ,SAA7C;AACH,GAzDa;;AAAA,OA2Dd8B,cA3Dc,GA2DG,UAACC,WAAD,EAAiB;AAC9BhC,IAAAA,QAAQ,GAAGgC,WAAX;AACAlC,IAAAA,EAAE,CAACqB,gBAAH,CAAoB3B,sBAApB,EAA4CQ,QAA5C;AACH,GA9Da;;AAAA,OAiEdiC,cAjEc,GAiEG,UAAAC,IAAI,EAAI;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,QAAQ,CAACoC,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAInC,QAAQ,CAACmC,CAAD,CAAR,CAAYE,GAAZ,KAAoBH,IAAI,CAACG,GAA7B,EAAkC;AAC9B,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAxEa;;AAAA,OA0EdC,eA1Ec,GA0EI,UAAAJ,IAAI,EAAI;AACtBlC,IAAAA,QAAQ,CAACuC,IAAT,CAAcL,IAAd;AACApC,IAAAA,EAAE,CAACqB,gBAAH,CAAoB3B,sBAApB,EAA4CQ,QAA5C;AACH,GA7Ea;;AAAA,OA+EdwC,kBA/Ec,GA+EO,UAAAN,IAAI,EAAI;AACzB,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAGnC,QAAQ,CAACoC,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,UAAInC,QAAQ,CAACmC,CAAD,CAAR,CAAYE,GAAZ,KAAoBH,IAAI,CAACG,GAA7B,EAAkC;AAC9BrC,QAAAA,QAAQ,CAACyC,MAAT,CAAgBN,CAAhB,EAAmB,CAAnB;AACArC,QAAAA,EAAE,CAACqB,gBAAH,CAAoB3B,sBAApB,EAA4CQ,QAA5C;AACA;AACH;AACJ;AACJ,GAvFa;;AACV,MAAG,CAACD,QAAJ,EAAc;AACVA,IAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,SAAOA,QAAP;AAEH,C;;AAoFL,eAAeW,WAAf","sourcesContent":["\r\n// Services\r\nimport notificationService, {NOTIF_WISHLIST_CHANGED,NOTIF_FILESLIST_CHANGED,NOTIF_FILEORFOLDER_CHANGED,NOTIF_FILECONTENT_CHANGED,NOTIF_MAINFOLDER_CHANGED,NOTIF_CURRENTFOLDER_CHANGED} from './notification-service';\r\n\r\n//import HttpService from '../services/http-service';\r\n//\r\n//const http = new HttpService();\r\n\r\n\r\nlet ns = new notificationService();\r\n\r\nlet instance = null;\r\n\r\nvar wishList = [];\r\n\r\nvar filesList = [];\r\nvar fileContent = {\r\n    fileName: \"\",\r\n    fileContents: \"\",\r\n    fileExe: \"\",\r\n}\r\nvar mainFolder = true;\r\nvar fileOrFolder = true;\r\nvar currnetFile = \"projects\";\r\n\r\nvar fromPage = 0;\r\n\r\nclass DataService {\r\n    constructor() {\r\n        if(!instance) {\r\n            instance = this;\r\n        }\r\n        return instance;\r\n        \r\n    }\r\n    \r\n    getFileContent = () => {\r\n        return fileContent;\r\n    }\r\n    \r\n    setFromPage = (newFromPage) => {\r\n        fromPage = newFromPage;\r\n    }\r\n    \r\n    getFromPage = () => {\r\n        return fromPage;\r\n    }\r\n    \r\n    getCurrentFile = () => {\r\n        return currnetFile;\r\n    }\r\n    \r\n    getFileOrFolder = () => {\r\n        return fileOrFolder;\r\n    }\r\n    \r\n    changedCurrnetFile = (newFolder) => {\r\n        currnetFile = newFolder;\r\n        ns.postNotification(NOTIF_CURRENTFOLDER_CHANGED, currnetFile);\r\n    }\r\n    \r\n    getMainFolder = () => {\r\n        return mainFolder;\r\n    }\r\n    \r\n    changedFileOrFolder = (val) => {\r\n        fileOrFolder = val;\r\n        ns.postNotification(NOTIF_FILEORFOLDER_CHANGED, fileOrFolder);\r\n    }\r\n    \r\n    putNewFileContent = (file) => {\r\n        fileContent.fileName = file.title;\r\n        fileContent.fileContents = file.content;\r\n        fileContent.fileExe = file.ext;\r\n        ns.postNotification(NOTIF_FILECONTENT_CHANGED, fileContent);\r\n    }\r\n    \r\n    changedTAFMainFolder = () => {\r\n        mainFolder = !mainFolder;\r\n        ns.postNotification(NOTIF_MAINFOLDER_CHANGED, mainFolder);\r\n    }\r\n    \r\n    putNewFilesList = (newFilesList) => {\r\n        filesList = newFilesList;\r\n        ns.postNotification(NOTIF_FILESLIST_CHANGED, filesList);\r\n    }\r\n    \r\n    putNewWishList = (newWishList) => {\r\n        wishList = newWishList;\r\n        ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n    }\r\n    \r\n    \r\n    itemOnWishList = item => {\r\n        for (var x = 0; x < wishList.length; x++) {\r\n            if (wishList[x]._id === item._id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    addWishListItem = item => {\r\n        wishList.push(item);\r\n        ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n    }\r\n    \r\n    removeWishListItem = item => {\r\n        for (var x=0;x < wishList.length; x++) {\r\n            if (wishList[x]._id === item._id) {\r\n                wishList.splice(x, 1);\r\n                ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataService;"]},"metadata":{},"sourceType":"module"}