{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\src\\\\testPt\\\\testPt.js\";\nimport React from 'react';\nimport './estPt.css'; // For ES5 builds, import from 'pts/dist/es5'. For ES6 or custom builds, import from 'pts'.\n\nimport { CanvasSpace, Line, Pt, Group } from 'pts';\nimport ReactRevealText from \"react-reveal-text\";\nvar one_degree = 0.01;\nvar textArray = [];\n\nvar PtsCanvas =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PtsCanvas, _React$Component);\n\n  function PtsCanvas(props) {\n    var _this;\n\n    _classCallCheck(this, PtsCanvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PtsCanvas).call(this, props));\n    _this.pairs = [];\n    _this.canvRef = React.createRef();\n    _this.space = null;\n    _this.form = null;\n    textArray.push(\"Hello, I'm Ori Sayda\");\n    textArray.push(\"I'm Software Engineer \");\n    _this.state = {\n      show: false,\n      seconedShow: false,\n      myText: textArray[0],\n      seconedText: textArray[1],\n      i: 0\n    };\n    return _this;\n  }\n\n  _createClass(PtsCanvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.init();\n\n      this._loop();\n\n      setTimeout(function () {\n        _this2.setState({\n          show: true\n        });\n      }, 500);\n      setTimeout(function () {\n        _this2.setState({\n          seconedShow: true\n        });\n      }, 3500);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._loop();\n    }\n  }, {\n    key: \"_loop\",\n    value: function _loop() {\n      this.space.bindMouse().bindTouch().play();\n\n      if (this.props.loop) {\n        this.space.play();\n      } else {\n        this.space.playOnce(0);\n      }\n    } // Required: Override this to use Pts' player `animate` callback\n    // See guide: https://ptsjs.org/guide/space-0500\n\n  }, {\n    key: \"animate\",\n    value: function animate(time, ftime) {\n      for (var i = 0, len = this.pairs.length; i < len; i++) {\n        // rotate each line by 0.1 degree and check collinearity with pointer\n        var ln = this.pairs[i];\n        ln.rotate2D(one_degree / 10, this.space.center);\n        var collinear = Line.collinear(ln[0], ln[1], this.space.pointer, 0.1);\n\n        if (collinear) {\n          this.form.stroke(\"#fff\").line(ln);\n        } else {\n          // if not collinear, color the line based on whether the pointer is on left or right side\n          var side = Line.sideOfPt2D(ln, this.space.pointer);\n          this.form.stroke(side < 0 ? \"rgba(255,255,0,.1)\" : \"rgba(0,255,255,.1)\").line(ln);\n        }\n\n        this.form.fillOnly(\"rgba(255,255,255,0.8\").points(ln, 1);\n      }\n\n      this.form.fillOnly(\"#fff\").point(this.space.pointer, 0.1, \"circle\");\n    } // Optional: Override this to use Pts' player `start` callback\n\n  }, {\n    key: \"start\",\n    value: function start(space) {\n      var r = space.size.minValue().value / 2; // create 200 lines\n\n      for (var i = 0; i < 120; i++) {\n        var ln = new Group(Pt.make(2, r, true), Pt.make(2, -r, true));\n        ln.moveBy(100).rotate2D(i * Math.PI / 5, space.center);\n        this.pairs.push(ln);\n      }\n    } // Optional: Override this to use Pts' player `resize` callback\n\n  }, {\n    key: \"resize\",\n    value: function resize(size, evt) {} // Optional: Override this to use Pts' player `action` callback\n\n  }, {\n    key: \"action\",\n    value: function action(type, px, py, evt) {}\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.space = new CanvasSpace(this.canvRef).setup({\n        bgcolor: this.props.background,\n        resize: true,\n        retina: true\n      });\n      this.form = this.space.getForm();\n      this.space.add(this);\n      this.space.bindMouse().bindTouch();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"canv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        className: \"canv\",\n        ref: function ref(c) {\n          return _this3.canvRef = c;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bgStyles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"textStyles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ReactRevealText, {\n        show: this.state.show,\n        text: this.state.myText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(ReactRevealText, {\n        show: this.state.seconedShow,\n        text: this.state.seconedText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PtsCanvas;\n}(React.Component);\n\nexport { PtsCanvas as default };\nPtsCanvas.defaultProps = {\n  name: \"pt\",\n  // maps to className of the container div\n  background: \"#252934\",\n  resize: true,\n  retina: true,\n  loop: true\n};","map":{"version":3,"sources":["C:\\Users\\ori saida\\Desktop\\OriHub\\client\\src\\testPt\\testPt.js"],"names":["React","CanvasSpace","Line","Pt","Group","ReactRevealText","one_degree","textArray","PtsCanvas","props","pairs","canvRef","createRef","space","form","push","state","show","seconedShow","myText","seconedText","i","init","_loop","setTimeout","setState","bindMouse","bindTouch","play","loop","playOnce","time","ftime","len","length","ln","rotate2D","center","collinear","pointer","stroke","line","side","sideOfPt2D","fillOnly","points","point","r","size","minValue","value","make","moveBy","Math","PI","evt","type","px","py","setup","bgcolor","background","resize","retina","getForm","add","c","Component","defaultProps","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './estPt.css' ;\r\n// For ES5 builds, import from 'pts/dist/es5'. For ES6 or custom builds, import from 'pts'.\r\nimport {CanvasSpace, Line, Pt, Group} from 'pts'; \r\nimport ReactRevealText from \"react-reveal-text\";\r\n\r\nconst one_degree=0.01;\r\nvar textArray = [];\r\n\r\nexport default class PtsCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        this.pairs = [];\r\n        this.canvRef = React.createRef();\r\n        this.space = null;\r\n        this.form = null;\r\n        \r\n        textArray.push(\"Hello, I'm Ori Sayda\");\r\n        textArray.push(\"I'm Software Engineer \");\r\n        this.state = { \r\n            show: false,\r\n            seconedShow: false,\r\n            myText: textArray[0],\r\n            seconedText: textArray[1],\r\n            i: 0,\r\n        };\r\n        \r\n        \r\n       \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.init();\r\n    this._loop();\r\n      setTimeout(() => {\r\n      this.setState({ show: true });\r\n    }, 500);\r\n      setTimeout(() => {\r\n      this.setState({ seconedShow: true });\r\n    }, 3500);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this._loop();\r\n  }\r\n\r\n    \r\n    \r\n    \r\n  _loop() {\r\n      this.space.bindMouse().bindTouch().play();\r\n    if (this.props.loop) {\r\n      this.space.play();\r\n    } else {\r\n      this.space.playOnce(0);\r\n    }\r\n  }\r\n\r\n\r\n  // Required: Override this to use Pts' player `animate` callback\r\n  // See guide: https://ptsjs.org/guide/space-0500\r\n  animate( time, ftime) {\r\n    for (let i=0, len=this.pairs.length; i<len; i++) {\r\n\r\n        // rotate each line by 0.1 degree and check collinearity with pointer\r\n        let ln = this.pairs[i];\r\n        ln.rotate2D( one_degree/10, this.space.center );\r\n        let collinear = Line.collinear( ln[0], ln[1], this.space.pointer, 0.1);\r\n\r\n        if (collinear) {\r\n          this.form.stroke(\"#fff\").line(ln);\r\n\r\n        } else {\r\n          // if not collinear, color the line based on whether the pointer is on left or right side\r\n          let side = Line.sideOfPt2D( ln, this.space.pointer );\r\n          this.form.stroke( (side<0) ? \"rgba(255,255,0,.1)\" : \"rgba(0,255,255,.1)\" ).line( ln );\r\n        }\r\n        this.form.fillOnly(\"rgba(255,255,255,0.8\").points( ln, 1);\r\n      }\r\n\r\n      this.form.fillOnly(\"#fff\").point( this.space.pointer, 0.1, \"circle\");\r\n  }\r\n\r\n  \r\n  // Optional: Override this to use Pts' player `start` callback\r\n  start( space) {\r\n      let r = space.size.minValue().value/2;\r\n\r\n      // create 200 lines\r\n      for (let i=0; i<120; i++) {\r\n        let ln = new Group( Pt.make(2, r, true), Pt.make(2, -r, true) );\r\n        ln.moveBy( 100 ).rotate2D( i*Math.PI/5, space.center );\r\n        this.pairs.push(ln );\r\n      }\r\n  }\r\n\r\n\r\n  // Optional: Override this to use Pts' player `resize` callback\r\n  resize( size, evt ) {}\r\n\r\n\r\n  // Optional: Override this to use Pts' player `action` callback\r\n  action ( type, px, py, evt ) {}\r\n\r\n\r\n   init() {\r\n    this.space = new CanvasSpace( this.canvRef ).setup({bgcolor: this.props.background, resize: true, retina: true});\r\n    this.form = this.space.getForm();\r\n\r\n    this.space.add( this );\r\n    this.space.bindMouse().bindTouch();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"canv\">\r\n            <canvas className=\"canv\" ref={ c => (this.canvRef=c) } />\r\n        <div className=\"bgStyles\">\r\n        <div className=\"textStyles\">\r\n          <ReactRevealText show={this.state.show} text={this.state.myText} />\r\n          <ReactRevealText show={this.state.seconedShow} text={this.state.seconedText} />\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nPtsCanvas.defaultProps = {\r\n  name: \"pt\", // maps to className of the container div\r\n  background: \"#252934\",\r\n  resize: true,\r\n  retina: true,\r\n  loop: true\r\n}"]},"metadata":{},"sourceType":"module"}