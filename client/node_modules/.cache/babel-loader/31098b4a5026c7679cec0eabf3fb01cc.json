{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ori saida\\\\Desktop\\\\OriHub\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nexport var NOTIF_WISHLIST_CHANGED = \"notif_wishlist_changed\";\nexport var NOTIF_FILESLIST_CHANGED = \"notif_fileslist_changed\";\nexport var NOTIF_FILEORFOLDER_CHANGED = \"notif_fileorfolder_changed\";\nexport var NOTIF_MAINFOLDER_CHANGED = \"notif_mainfolder_changed\";\nexport var NOTIF_FILECONTENT_CHANGED = \"notif_filecontent_changed\";\nexport var NOTIF_CURRENTFOLDER_CHANGED = \"notif_currentfolder_changed\";\nvar instance = null;\nvar observers = {};\n\nvar notificationService = function notificationService() {\n  _classCallCheck(this, notificationService);\n\n  this.postNotification = function (notifName, data) {\n    var obs = observers[notifName];\n\n    if (obs !== undefined && obs.length) {\n      for (var x = 0; x < obs.length; x++) {\n        var obj = obs[x];\n        obj.callBack(data);\n      }\n    }\n  };\n\n  this.removeObserver = function (notifName, observer, callBack) {\n    var obs = observers[notifName];\n\n    if (obs) {\n      for (var x = 0; x < obs.length; x++) {\n        if (observer === obs[x].observer) {\n          obs.splice(x, 1);\n          observers[notifName] = obs;\n          break;\n        }\n      }\n    }\n  };\n\n  this.addObserver = function (notifName, observer, callBack) {\n    var obs = observers[notifName];\n\n    if (!obs) {\n      observers[notifName] = [];\n    }\n\n    var obj = {\n      observer: observer,\n      callBack: callBack\n    };\n    observers[notifName].push(obj);\n  };\n\n  if (!instance) {\n    instance = this;\n  }\n\n  return instance;\n};\n\nexport default notificationService;","map":{"version":3,"sources":["C:\\Users\\ori saida\\Desktop\\OriHub\\client\\src\\services\\notification-service.js"],"names":["NOTIF_WISHLIST_CHANGED","NOTIF_FILESLIST_CHANGED","NOTIF_FILEORFOLDER_CHANGED","NOTIF_MAINFOLDER_CHANGED","NOTIF_FILECONTENT_CHANGED","NOTIF_CURRENTFOLDER_CHANGED","instance","observers","notificationService","postNotification","notifName","data","obs","undefined","length","x","obj","callBack","removeObserver","observer","splice","addObserver","push"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,2BAA2B,GAAG,6BAApC;AAEP,IAAIC,QAAQ,GAAG,IAAf;AAEA,IAAIC,SAAS,GAAG,EAAhB;;IAEMC,mB,GACF,+BAAc;AAAA;;AAAA,OAQdC,gBARc,GAQK,UAACC,SAAD,EAAYC,IAAZ,EAAqB;AACpC,QAAIC,GAAG,GAAGL,SAAS,CAACG,SAAD,CAAnB;;AACA,QAAGE,GAAG,KAAKC,SAAR,IAAqBD,GAAG,CAACE,MAA5B,EAAoC;AAChC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACE,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACrC,YAAIC,GAAG,GAAGJ,GAAG,CAACG,CAAD,CAAb;AACAC,QAAAA,GAAG,CAACC,QAAJ,CAAaN,IAAb;AACH;AACA;AACJ,GAhBa;;AAAA,OAkBdO,cAlBc,GAkBG,UAACR,SAAD,EAAYS,QAAZ,EAAsBF,QAAtB,EAAmC;AAChD,QAAIL,GAAG,GAAGL,SAAS,CAACG,SAAD,CAAnB;;AAEA,QAAGE,GAAH,EAAQ;AACJ,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACE,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjC,YAAII,QAAQ,KAAKP,GAAG,CAACG,CAAD,CAAH,CAAOI,QAAxB,EAAkC;AAC9BP,UAAAA,GAAG,CAACQ,MAAJ,CAAWL,CAAX,EAAa,CAAb;AACAR,UAAAA,SAAS,CAACG,SAAD,CAAT,GAAuBE,GAAvB;AACA;AACH;AACJ;AACJ;AACJ,GA9Ba;;AAAA,OAgCdS,WAhCc,GAgCA,UAACX,SAAD,EAAYS,QAAZ,EAAsBF,QAAtB,EAAmC;AAC7C,QAAIL,GAAG,GAAGL,SAAS,CAACG,SAAD,CAAnB;;AAEA,QAAG,CAACE,GAAJ,EAAS;AACLL,MAAAA,SAAS,CAACG,SAAD,CAAT,GAAuB,EAAvB;AACH;;AAED,QAAIM,GAAG,GAAG;AAACG,MAAAA,QAAQ,EAAEA,QAAX;AAAqBF,MAAAA,QAAQ,EAAEA;AAA/B,KAAV;AACAV,IAAAA,SAAS,CAACG,SAAD,CAAT,CAAqBY,IAArB,CAA0BN,GAA1B;AAEH,GA1Ca;;AACV,MAAG,CAACV,QAAJ,EAAc;AACVA,IAAAA,QAAQ,GAAG,IAAX;AACH;;AAED,SAAOA,QAAP;AACH,C;;AAuCL,eAAeE,mBAAf","sourcesContent":["export const NOTIF_WISHLIST_CHANGED = \"notif_wishlist_changed\";\r\nexport const NOTIF_FILESLIST_CHANGED = \"notif_fileslist_changed\";\r\nexport const NOTIF_FILEORFOLDER_CHANGED = \"notif_fileorfolder_changed\";\r\nexport const NOTIF_MAINFOLDER_CHANGED = \"notif_mainfolder_changed\";\r\nexport const NOTIF_FILECONTENT_CHANGED = \"notif_filecontent_changed\";\r\nexport const NOTIF_CURRENTFOLDER_CHANGED = \"notif_currentfolder_changed\";\r\n\r\nlet instance = null;\r\n\r\nvar observers = {};\r\n\r\nclass notificationService {\r\n    constructor() {\r\n        if(!instance) {\r\n            instance = this;\r\n        }\r\n        \r\n        return instance;\r\n    }\r\n    \r\n    postNotification = (notifName, data) => {\r\n        let obs = observers[notifName];\r\n        if(obs !== undefined && obs.length) {\r\n            for (var x = 0; x < obs.length; x++) {\r\n            var obj = obs[x];\r\n            obj.callBack(data);\r\n        }\r\n        }\r\n    }\r\n    \r\n    removeObserver = (notifName, observer, callBack) => {\r\n        let obs = observers[notifName];\r\n        \r\n        if(obs) {\r\n            for (var x = 0; x < obs.length; x++) {\r\n                if (observer === obs[x].observer) {\r\n                    obs.splice(x,1);\r\n                    observers[notifName] = obs;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    addObserver = (notifName, observer, callBack) => {\r\n        let obs = observers[notifName];\r\n        \r\n        if(!obs) {\r\n            observers[notifName] = [];\r\n        }\r\n        \r\n        let obj = {observer: observer, callBack: callBack};\r\n        observers[notifName].push(obj);\r\n        \r\n    }\r\n}\r\n\r\nexport default notificationService;"]},"metadata":{},"sourceType":"module"}